
//------------------------------------------------------------------------------

//  <auto-generated>
//      This code was generated by:
//        TerminalGuiDesigner v1.1.0.0
//      You can make changes to this file and they will not be overwritten when saving.
//  </auto-generated>
// -----------------------------------------------------------------------------
namespace MCSM {
    using System.Xml;
    using Terminal.Gui;
    
    
    public partial class ModManage {
        private string dispath;
        private string enpath;
        private string backPath;
        public ModManage() {
            InitializeComponent();
            InitDirectories();
            listView.OpenSelectedItem += (a) => {
                if (!MainProc.IsServerRunning)
                    if (File.Exists(Path.Combine(enpath,MainProc.enableMods[listView.SelectedItem]))){
                        File.Move(Path.Combine(enpath,MainProc.enableMods[listView.SelectedItem]),Path.Combine(dispath,MainProc.enableMods[listView.SelectedItem]));
                        DirRefreash();
                    }
            };
            listView2.OpenSelectedItem += (a) =>{
                if (!MainProc.IsServerRunning)
                    if (File.Exists(Path.Combine(dispath,MainProc.disableMods[listView2.SelectedItem]))){
                        File.Move(Path.Combine(dispath,MainProc.disableMods[listView2.SelectedItem]),Path.Combine(enpath,MainProc.disableMods[listView2.SelectedItem]));
                        DirRefreash();
                    }
            };
            listView.SelectedItemChanged += (a) =>{
                DirRefreash();
            };
            listView2.SelectedItemChanged += (a) =>{
                DirRefreash();
            };
        }
        void InitDirectories(){
            if (String.IsNullOrEmpty(MainProc.ServerPathAt)) dispath = @"disablemods";
            else dispath = Path.Combine(MainProc.ServerPathAt,@"disablemods");
            if (!Directory.Exists(dispath)) Directory.CreateDirectory(dispath);

            if (String.IsNullOrEmpty(MainProc.ServerPathAt)) enpath = @"mods";
            else enpath = Path.Combine(MainProc.ServerPathAt,@"mods");
            if (!Directory.Exists(enpath)) Directory.CreateDirectory(enpath);

            if (String.IsNullOrEmpty(MainProc.ServerPathAt)) backPath = @"backupmods";
            else backPath = Path.Combine(MainProc.ServerPathAt,@"backupmods");
            if (!Directory.Exists(backPath)) Directory.CreateDirectory(backPath);

            DirRefreash();
            createBackups();

            listView.SetSourceAsync(MainProc.enableMods);
            listView2.SetSourceAsync(MainProc.disableMods);
        }
        void DirRefreash(){
            MainProc.enableMods.Clear();
            MainProc.disableMods.Clear();
            MainProc.enableMods.AddRange(Directory.GetFiles(enpath,"*.jar"));
            MainProc.disableMods.AddRange(Directory.GetFiles(dispath));

            for (int i = 0; i < MainProc.enableMods.Count;i++){
                MainProc.enableMods[i] = Path.GetFileName(MainProc.enableMods[i]);
            }
            for (int i = 0; i < MainProc.disableMods.Count;i++){
                MainProc.disableMods[i] = Path.GetFileName(MainProc.disableMods[i]);
            }
        }
        void createBackups(){
            foreach (string file in Directory.GetFiles(enpath,"*.jar")){
                if (!File.Exists(file)) File.Copy(file,Path.Combine(backPath,Path.GetFileName(file)));
            }
            foreach (string file in Directory.GetFiles(dispath,"*.jar")){
                if (!File.Exists(file)) File.Copy(file,Path.Combine(backPath,Path.GetFileName(file)));
            }
        }
    }
}
